name: Bauen und Installer sowie Update erstellen

on:
    push:
        tags:
            - '*.*.*'

jobs:
    installer-erstellen:
        runs-on: windows-latest
        name: Installer bauen
        permissions:
            packages: write
            contents: write

        steps:
            - name: Repository laden
              uses: actions/checkout@v4

            - name: .NET installieren
              uses: actions/setup-dotnet@v4

            - name: GitHub Package Manager registrieren
              run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/co-IT/index.json"

            - name: Anwendung bauen
              run: dotnet publish -c Release -r win-x64 ${{ github.workspace }}\coIT.Toolkit.SendGrid.TemplateManager\coIT.Toolkit.SendGrid.TemplateManager.csproj --property:PublishProfile="FolderProfile"

            - name: Installer bauen
              uses: caphyon/advinst-github-action@v2.0
              with:
                  advinst-version: '22.0'
                  advinst-license: ${{ secrets.ADVINST_LICENSE_KEY }}
                  advinst-enable-automation: 'true'
                  aip-path: ${{ github.workspace }}\coIT.Toolkit.SendGrid.TemplateManager.Installer.aip
                  aip-build-name: DefaultBuild
                  aip-package-name: coIT.Toolkit.SendGrid.TemplateManager.Installer-${{github.ref_name}}.msi
                  aip-output-dir:  ${{ github.workspace }}\setup
                  aip-commands: |
                      SetVersion ${{github.ref_name}}

            - name: Installer zu release hinzufügen
              uses: svenstaro/upload-release-action@v2
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: ${{ github.workspace }}\setup\coIT.Toolkit.SendGrid.TemplateManager.Installer-${{github.ref_name}}.msi
                  tag: ${{ github.ref }}
                  overwrite: true

            - name: Update json erstellen
              env:
                  VERSION: ${{ github.ref_name }}
              run: |
                  # JSON String erstellen
                  $jsonString = '{"RegistryKey":"HKUD\\Software\\\\co-IT.eu GmbH\\SendGrind TemplateManager\\Version", "Version":"' + $env:VERSION + '"}'

                  # Datei erstellen
                  $jsonString | Set-Content -Path advinst_update.json

                  # Dbug Ausgabe
                  Write-Output (Resolve-Path advinst_update.json)
                  Get-Content advinst_update.json

            - name: Update json zu Release hinzufügen
              uses: svenstaro/upload-release-action@v2
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: ${{ github.workspace }}\advinst_update.json
                  tag: ${{ github.ref }}
                  overwrite: true
